}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))[pollutant)))
na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))[pollutant))
na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))[pollutant)
na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))[pollutant])
na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"])
read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"]
pollutantmean <- function(directory, pollutant, id = 1:332) {
pullutant <- c("sulfate","nitrate")
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- c(data , as.matrix(na.omit(read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))[,which(pullutant == pollutant)+1])))
}
return(mean(data))
}
pollutantmean("specdata", "nitrate", 23)
read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"]
na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"])
as.matrix(na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"])0
as.matrix(na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"]))
test <- na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"])
test <- c(test,na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"]))
test
test <- c(test["sulfate"],na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"]))
test
test <- c()
test <- c(test["sulfate"],na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"]))
test
test <- c(test["sulfate"],na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"]))
test
test <- c(test["sulfate"],as.matrix(na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"])))
test
test <- c()
test <- c(test["sulfate"],as.matrix(na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"])))
test <- c(test["sulfate"],as.matrix(na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"])))
test
test <- c(test["sulfate"],as.matrix(na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"])))
test
test <- c(test,as.matrix(na.omit(read.csv(paste(paste("specdata","001",sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))["sulfate"])))
test
test
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
pullutant <- c("sulfate","nitrate")
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- c(data , as.matrix(na.omit(read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))[,which(pullutant == pollutant)+1])))
}
return(round(mean(data),3))
}
pollutantmean("specdata", "sulfate", 23)
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
pullutant <- c("sulfate","nitrate")
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- c(data , as.matrix(na.omit(read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"),header=T)[,which(pullutant == pollutant)+1])))
}
return(round(mean(data),3))
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
current_file <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."),header=T)
data <- c(data ,current_file[!is.na(current_file[, pollutant]), pollutant])
}
return(round(mean(data),3))
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
current_file <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."),header=T)
data <- c(data ,current_file[!is.na(current_file[, pollutant]), pollutant])
}
#return(round(mean(data),3))
return(sensorID)
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
current_file <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."),header=T,sep=",")
data <- c(data ,current_file[!is.na(current_file[, pollutant]), pollutant])
}
return(round(mean(data),3))
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
all_files <- as.character( list.files("specdata") )
file_paths <- paste(directory, all_files, sep="")
all_files <- as.character( list.files("specdata") )
file_paths <- paste(specdata, all_files, sep="")
all_files <- as.character( list.files("specdata") )
file_paths <- paste("specdata", all_files, sep="")
file_paths[23]
pollutantmean <- function(directory, pollutant, id = 1:332) {
#You can read all the files in a directory by using list.files as below
#files<-list.files(directory,pattern="*.csv",full.names=TRUE)
pdata<-NULL
#I chose to construct it using sprintf
files<-sprintf("%s/%03d.csv",directory,id)
for(file in files){
pdata<-rbind(pdata,read.csv(file))
}
round(mean(pdata[[pollutant]],na.rm=TRUE),digits=3)
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
sensorID <- formatC(23, width = 3, format = "d", flag = "0")
sensorID
paste(paste(directory,sensorID,sep = "/"),"csv",sep = ".")
paste(paste("specdata",sensorID,sep = "/"),"csv",sep = ".")
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
current_file <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."),header=T,sep=",")
data <- rbind(data ,current_file[!is.na(current_file[, pollutant]), pollutant])
}
return(round(mean(data),3))
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
current_file <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."),header=T,sep=",")
data <- rbind(data ,current_file[[pollutant]]))
}
return(round(mean(data,na.rm=TRUE),3))
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
current_file <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."),header=T,sep=",")
data <- rbind(data ,current_file[[pollutant]])
}
return(round(mean(data,na.rm=TRUE),3))
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
data <- NULL
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
current_file <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."),header=T,sep=",")
data <- rbind(data ,current_file[[pollutant]])
}
return(round(mean(data,na.rm=TRUE),3))
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
data <- NULL
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
current_file <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."),header=T,sep=",")
data <- rbind(data ,current_file)
}
return(round(mean(data[[pollutant]],na.rm=TRUE),3))
}
pollutantmean("specdata", "nitrate", 70:72)
read.csv("hw1_data.csv")
data <- read.csv("hw1_data.csv")
nrow(data)
data[47]
data[47,]
data[,1]
is.na(data[,1])
data[is.na(data[,1])]
data[is.na(data[,1]),]
nrows(data[is.na(data[,1]),])
nrow(data[is.na(data[,1]),])
mean(data[!is.na(data[,1]),])
mean(data[!is.na(data[,1]),1])
mean(data[data$Ozone >31 && data$Temp,2])
mean(data[data$Ozone >31 && data$Temp>90,2])
data[data$Ozone > 31 && data$Temp > 90,2]
data[data$Ozone > 31,]
data[data$Ozone > 31 & data$Temp > 90,]
data[data$Ozone > 31 & data$Temp > 90 & !is.na(data$Solar.R) ,2]
data[data$Ozone > 31 & data$Temp > 90 & !is.na(data$Solar.R) ,2]
data[data$Ozone > 31 & data$Temp > 90 & !is.na(data$Solar.R) ,]
data[data$Ozone > 31 & data$Temp > 90 & !is.na(data$Solar.R) ,]
data[data$Ozone > 31 & data$Temp > 90 ,]
x <- data[data$Ozone > 31 & data$Temp > 90 ,]
is.na(x)
is.na(x$Solar.R)
x[!is.na(x$Solar.R)]
x[!is.na(x$Solar.R),2]
mean(x[!is.na(x$Solar.R),2])
mean(data[!is.na(data$Temp) & data$Month == 6,4])
data[!is.na(data$Temp) & data$Month == 6,4]
data[!is.na(data$Temp) & data$Month == 6,]
max(data[!is.na(data$Ozone) & data$Month == 5,1])
x <- 4L
class(x)
x <- c(4, TRUE)
class(x)
x
library("swirl", lib.loc="~/R/win-library/3.1")
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
pollutantmean <- function(directory, pollutant, id = 1:332) {
data <- NULL
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
current_file <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."),header=T,sep=",")
data <- rbind(data ,current_file)
}
return(round(mean(data[[pollutant]],na.rm=TRUE),3))
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
complete <- function(directory, id = 1:332) {
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))
output <- c()nrow(data[complete.cases(data),])
}
}
complete <- function(directory, id = 1:332) {
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))
output <- c(output,nrow(data[complete.cases(data),])
}
}
complete <- function(directory, id = 1:332) {
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))
output <- c(output,nrow(data[complete.cases(data),]))
}
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
output <- null
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))
output <- c(output,nrow(data[complete.cases(data),]))
}
return(output)
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
output <- NULL
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))
output <- c(output,nrow(data[complete.cases(data),]))
}
return(output)
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
output <- NULL
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))
output <- c(output,c(i,nrow(data[complete.cases(data),])))
}
return(output)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
output <- NULL
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))
output <- rbind(output,c(i,nrow(data[complete.cases(data),])))
}
return(output)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
output <- data.frame()
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))
output <- rbind(output,c(i,nrow(data[complete.cases(data),])))
}
return(output)
}
complete("specdata", c(2, 4, 8, 10, 12))
output <- data.frame()
names(output)
names(output) <- c("id","nobs")
colnames(output) <- c("id","nobs")
complete <- function(directory, id = 1:332) {
output <- data.frame()
for(i in id){
sensorID <- formatC(i, width = 3, format = "d", flag = "0")
data <- read.csv(paste(paste(directory,sensorID,sep = "/"),"csv",sep = "."), colClasses=c("character","double","double"))
output <- rbind(output,c(i,nrow(data[complete.cases(data),])))
}
colnames(output) <- c("id","nobs")
return(output)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 3)
corr <- function(directory, threshold = 0) {
completes <- complete(directory, 1:332)
completes <- subset(completes, nobs > threshold )
## Initialize variables
correlations <- vector()
## Loop over the passed id's
for(i in completes$id ) {
## Pad the i to create a filename
filename <- sprintf("%03d.csv", i)
filepath <- paste(directory, filename, sep="/")
## Load the data
data <- read.csv(filepath)
## Calculate and store the count of complete cases
completeCases <- data[complete.cases(data),]
count <- nrow(completeCases)
## Calculate and store the count of complete cases
## if threshhold is reached
if( count >= threshold ) {
correlations <- c(correlations, cor(completeCases$nitrate, completeCases$sulfate) )
}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
corr <- function(directory, threshold = 0) {
completes <- complete(directory, 1:332)
completes <- subset(completes, nobs > threshold )
## Initialize variables
correlations <- vector()
## Loop over the passed id's
for(i in completes$id ) {
## Pad the i to create a filename
filename <- sprintf("%03d.csv", i)
filepath <- paste(directory, filename, sep="/")
## Load the data
data <- read.csv(filepath)
## Calculate and store the count of complete cases
completeCases <- data[complete.cases(data),]
count <- nrow(completeCases)
## Calculate and store the count of complete cases
## if threshhold is reached
##if( count >= threshold ) {
correlations <- c(correlations, cor(completeCases$nitrate, completeCases$sulfate) )
##}
}
## Return a numeric vector of correlations
correlations
}
cr <- corr("specdata", 400)
head(cr)
?cor
?nobs
corr <- function(directory, threshold = 0) {
completeCases <- complete(directory, 1:332)
goodCompleteCases <- subset(completeCases, nobs > threshold )
output <- vector()
for(i in goodCompleteCases$id ) {
filename <- sprintf("%03d.csv", i)
filepath <- paste(directory, filename, sep="/")
data <- read.csv(filepath)
completeCases <- data[goodCompleteCases.cases(data),]
count <- nrow(completeCases)
output <- c(output, cor(goodCompleteCases$nitrate, goodCompleteCases$sulfate) )
}
return(correlations)
}
cr <- corr("specdata", 400)
head(cr)
?round
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
setwd("~/")
setwd("C:\Users\Chris\git\datasciencecoursera\R.Programing\Assignment.1")
setwd("C:\\Users\\Chris\\git\\datasciencecoursera\\R.Programing\\Assignment.1")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
complete(directory, 1:332)
complete("C:\\Users\\Chris\\git\\datasciencecoursera\\R.Programing\\Assignment.1\\specdata", 1:332)
corr <- function(directory, threshold = 0) {
completeCases <- complete(directory, 1:332)
goodCompleteCases <- subset(completeCases, nobs > threshold )
output <- vector()
for(i in goodCompleteCases$id ) {
filename <- sprintf("%03d.csv", i)
filepath <- paste(directory, filename, sep="/")
data <- read.csv(filepath)
completeCases <- data[complete.cases(data),]
count <- nrow(completeCases)
output <- c(output, cor(goodCompleteCases$nitrate, goodCompleteCases$sulfate) )
}
return(correlations)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
goodmonitors <- complete(directory, 1:332)
goodmonitors <- subset(goodmonitors, nobs > threshold )
correlations <- vector()
for(i in goodmonitors$id ) {
filename <- sprintf("%03d.csv", i)
filepath <- paste(directory, filename, sep="/")
data <- read.csv(filepath)
completeCases <- data[complete.cases(data),]
correlations <- c(correlations, cor(completeCases$nitrate, completeCases$sulfate) )
}
return(correlations)
}
cr <- corr("specdata", 150)
head(cr)
submit()
submit()
submit()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
?gl
gl(2, 1, 20)
gl(2, 2, 20)
install.packages("ggplot2")
